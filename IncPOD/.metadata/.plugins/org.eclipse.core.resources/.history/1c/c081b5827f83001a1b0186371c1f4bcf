import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Iterator;
import java.util.Scanner;

import algorithms.hybrid.Incpod;
import input.Input;
import input.InputIterationException;
import input.OriginPOD;
import input.ParsedColumn;
import input.RelationalInput;
import pod.pointOD.PointOD;
import pod.pointOD.PointODSet;
import predicates.PredicateBuilder;


public class Main{

	public static void main(String[] args) throws Exception {
		// TODO Auto-generated method stub
		String line ="D:\\IncPOD\\IncPOD\\incpod\\SPS_origin.csv";    
		String incline ="D:\\IncPOD\\IncPOD\\incpod\\dataset\\SPS_inc.csv";    
		String odline ="D:\\IncPOD\\IncPOD\\incpod\\dataset\\sps90k";
		
		int n=Integer.valueOf("90000");
		int m=Integer.valueOf("20000");
		int size=m;
		//if(args.length>=6) size=Integer.valueOf(args[5]);
		double alpha = 0.4;
	//	if(args.length>=7) alpha=Double.valueOf(args[6]);
		
		File file = new File(line);
		File incfile = new File(incline);
		File od = new File(odline);
		RelationalInput data = new RelationalInput(file);
		RelationalInput incdata = new RelationalInput(incfile);
		Input input = new Input(data,incdata,n,m);
		System.out.println("data name : claim");
		System.out.println("origin data size : "+n);
		System.out.println("incremental data size : "+m);
		System.out.println("tuples in a single round : "+size);
		PredicateBuilder predicates = new PredicateBuilder(input);
		OriginPOD origin=new OriginPOD(od,input.getColumns());
		 
		System.out.println("total constraints size : "+origin.total.size());

		Incpod incpod = new Incpod();
		System.out.println("------------------ now is Incpod for od -------------------");
		PointODSet pods = incpod.run(input,predicates,origin,alpha,n,m,size);
		System.out.println("total used time(excluding time for building indexes) : "+ incpod.time+ " ms"); 
		System.out.println("minimal PODs size : "+pods.size());
		
		String miniod="";
		int count=-1; 
		for(Iterator<PointOD> iter = pods.iterator();iter.hasNext();){
			count++;
		    miniod+="this is "+count+" "+iter.next().toString()+"\n";
		}
		
		try{
			String miniodline =line.replaceAll(".", "_")+"PODs.txt";

			System.out.println("Writting pod...");
			File miniodfile =new File(miniodline); 
			FileWriter fileWritter = new FileWriter(file);
			fileWritter.write(miniod);
			if(!miniodfile.exists()){
				miniodfile.createNewFile();
			}
			fileWritter.close();
			System.out.println("Write pod Done");
		}catch(IOException e){
			e.printStackTrace();
		}
	}
}
